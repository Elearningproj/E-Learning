{"ast":null,"code":"// import { useEffect, useState } from 'react'\n// import { deleteItemFromCart, getCartItems, updateCart } from '../services/cart'\n// import { toast } from 'react-toastify'\n// import CartItem from '../components/CartItem'\n// import './Cart.css'\n// import { placeOrder } from '../services/order'\n// import { useDispatch } from 'react-redux'\n// import { deleteProduct } from '../../slices/cartSlice'\n\n// function Cart() {\n//   const [items, setItems] = useState([])\n\n//   // get the dispatcher\n//   const dispatcher = useDispatch()\n\n//   const loadCartItems = async () => {\n//     const result = await getCartItems()\n//     console.log(result)\n//     if (result['status'] == 'success') {\n//       setItems(result['data'])\n//     } else {\n//       toast.error(result['error'])\n//     }\n//   }\n\n//   const getSubtotal = () => {\n//     let total = 0\n//     for (const item of items) {\n//       total += item['quantity'] * item['price']\n//     }\n\n//     return total\n//   }\n\n//   const updateQuantity = async (cartId, newQuantity) => {\n//     if (newQuantity == 0) {\n//       // user no longer wants to keep this product in cart\n//       const result = await deleteItemFromCart(cartId)\n//       if (result['status'] == 'success') {\n//         toast.success('Successfully deleted item from cart')\n\n//         // update the itemCount in cartSlice\n//         dispatcher(deleteProduct())\n\n//         // refresh the list of items\n//         loadCartItems()\n//       } else {\n//         toast.error(result['error'])\n//       }\n//     } else {\n//       const result = await updateCart(cartId, newQuantity)\n//       if (result['status'] == 'success') {\n//         // refresh the list of items\n//         loadCartItems()\n//       } else {\n//         toast.error(result['error'])\n//       }\n//     }\n//   }\n\n//   useEffect(() => {\n//     loadCartItems()\n//   }, [])\n\n//   const onPlaceOrder = async () => {\n//     const totalAmount = getSubtotal() + getSubtotal() * 0.18\n//     const result = await placeOrder(totalAmount)\n//     if (result['status'] == 'success') {\n//       toast.success('Successfully placed your order')\n\n//       // refresh the list of items\n//       loadCartItems()\n//     } else {\n//       toast.error(result['error'])\n//     }\n//   }\n\n//   return (\n//     <div>\n//       <h2 className='header'>Cart</h2>\n//       {items.length == 0 && (\n//         <h4>\n//           There are no items in your cart. Please add one to place an order\n//         </h4>\n//       )}\n\n//       {items.length > 0 && (\n//         <div className='row'>\n//           <div className='col-9'>\n//             <table className='table table-hover table-bordered'>\n//               <thead>\n//                 <tr>\n//                   <th>No</th>\n//                   <th>Image</th>\n//                   <th>Title</th>\n//                   <th>Price</th>\n//                   <th>Quantity</th>\n//                   <th>Total</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {items.map((item, index) => {\n//                   return (\n//                     <CartItem\n//                       item={item}\n//                       index={index}\n//                       onUpdateQuantity={(newQuantity) => {\n//                         updateQuantity(item['id'], newQuantity)\n//                       }}\n//                     />\n//                   )\n//                 })}\n//               </tbody>\n//             </table>\n//           </div>\n//           <div className='col-3 '>\n//             <div className='cart-summary'>\n//               <div>\n//                 <label htmlFor='' style={{ width: 100 }}>\n//                   # Items:\n//                 </label>\n//                 <span style={{ fontWeight: 'bold' }}>{items.length}</span>\n//               </div>\n//               <div>\n//                 <label htmlFor='' style={{ width: 100 }}>\n//                   Subtotal:\n//                 </label>\n//                 <span style={{ fontWeight: 'bold' }}>₹ {getSubtotal()}</span>\n//               </div>\n//               <div>\n//                 <label htmlFor='' style={{ width: 100 }}>\n//                   GST:\n//                 </label>\n//                 <span style={{ fontWeight: 'bold' }}>\n//                   ₹ {(getSubtotal() * 0.18).toFixed(2)}\n//                 </span>\n//               </div>\n//               <hr />\n//               <div>\n//                 <label htmlFor='' style={{ width: 100 }}>\n//                   Cart Total:\n//                 </label>\n//                 <span style={{ fontWeight: 'bold' }}>\n//                   ₹ {(getSubtotal() + getSubtotal() * 0.18).toFixed(2)}\n//                 </span>\n//               </div>\n//             </div>\n\n//             <div style={{ textAlign: 'center' }}>\n//               <button onClick={onPlaceOrder} className='btn btn-success mt-2'>\n//                 Place Order\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   )\n// }\n\n// export default Cart","map":{"version":3,"names":[],"sources":["D:/ELearning/E-Learning/Frontend/src/screens/User/Cart.jsx"],"sourcesContent":["// import { useEffect, useState } from 'react'\r\n// import { deleteItemFromCart, getCartItems, updateCart } from '../services/cart'\r\n// import { toast } from 'react-toastify'\r\n// import CartItem from '../components/CartItem'\r\n// import './Cart.css'\r\n// import { placeOrder } from '../services/order'\r\n// import { useDispatch } from 'react-redux'\r\n// import { deleteProduct } from '../../slices/cartSlice'\r\n\r\n// function Cart() {\r\n//   const [items, setItems] = useState([])\r\n\r\n//   // get the dispatcher\r\n//   const dispatcher = useDispatch()\r\n\r\n//   const loadCartItems = async () => {\r\n//     const result = await getCartItems()\r\n//     console.log(result)\r\n//     if (result['status'] == 'success') {\r\n//       setItems(result['data'])\r\n//     } else {\r\n//       toast.error(result['error'])\r\n//     }\r\n//   }\r\n\r\n//   const getSubtotal = () => {\r\n//     let total = 0\r\n//     for (const item of items) {\r\n//       total += item['quantity'] * item['price']\r\n//     }\r\n\r\n//     return total\r\n//   }\r\n\r\n//   const updateQuantity = async (cartId, newQuantity) => {\r\n//     if (newQuantity == 0) {\r\n//       // user no longer wants to keep this product in cart\r\n//       const result = await deleteItemFromCart(cartId)\r\n//       if (result['status'] == 'success') {\r\n//         toast.success('Successfully deleted item from cart')\r\n\r\n//         // update the itemCount in cartSlice\r\n//         dispatcher(deleteProduct())\r\n\r\n//         // refresh the list of items\r\n//         loadCartItems()\r\n//       } else {\r\n//         toast.error(result['error'])\r\n//       }\r\n//     } else {\r\n//       const result = await updateCart(cartId, newQuantity)\r\n//       if (result['status'] == 'success') {\r\n//         // refresh the list of items\r\n//         loadCartItems()\r\n//       } else {\r\n//         toast.error(result['error'])\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     loadCartItems()\r\n//   }, [])\r\n\r\n//   const onPlaceOrder = async () => {\r\n//     const totalAmount = getSubtotal() + getSubtotal() * 0.18\r\n//     const result = await placeOrder(totalAmount)\r\n//     if (result['status'] == 'success') {\r\n//       toast.success('Successfully placed your order')\r\n\r\n//       // refresh the list of items\r\n//       loadCartItems()\r\n//     } else {\r\n//       toast.error(result['error'])\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2 className='header'>Cart</h2>\r\n//       {items.length == 0 && (\r\n//         <h4>\r\n//           There are no items in your cart. Please add one to place an order\r\n//         </h4>\r\n//       )}\r\n\r\n//       {items.length > 0 && (\r\n//         <div className='row'>\r\n//           <div className='col-9'>\r\n//             <table className='table table-hover table-bordered'>\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>No</th>\r\n//                   <th>Image</th>\r\n//                   <th>Title</th>\r\n//                   <th>Price</th>\r\n//                   <th>Quantity</th>\r\n//                   <th>Total</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {items.map((item, index) => {\r\n//                   return (\r\n//                     <CartItem\r\n//                       item={item}\r\n//                       index={index}\r\n//                       onUpdateQuantity={(newQuantity) => {\r\n//                         updateQuantity(item['id'], newQuantity)\r\n//                       }}\r\n//                     />\r\n//                   )\r\n//                 })}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//           <div className='col-3 '>\r\n//             <div className='cart-summary'>\r\n//               <div>\r\n//                 <label htmlFor='' style={{ width: 100 }}>\r\n//                   # Items:\r\n//                 </label>\r\n//                 <span style={{ fontWeight: 'bold' }}>{items.length}</span>\r\n//               </div>\r\n//               <div>\r\n//                 <label htmlFor='' style={{ width: 100 }}>\r\n//                   Subtotal:\r\n//                 </label>\r\n//                 <span style={{ fontWeight: 'bold' }}>₹ {getSubtotal()}</span>\r\n//               </div>\r\n//               <div>\r\n//                 <label htmlFor='' style={{ width: 100 }}>\r\n//                   GST:\r\n//                 </label>\r\n//                 <span style={{ fontWeight: 'bold' }}>\r\n//                   ₹ {(getSubtotal() * 0.18).toFixed(2)}\r\n//                 </span>\r\n//               </div>\r\n//               <hr />\r\n//               <div>\r\n//                 <label htmlFor='' style={{ width: 100 }}>\r\n//                   Cart Total:\r\n//                 </label>\r\n//                 <span style={{ fontWeight: 'bold' }}>\r\n//                   ₹ {(getSubtotal() + getSubtotal() * 0.18).toFixed(2)}\r\n//                 </span>\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div style={{ textAlign: 'center' }}>\r\n//               <button onClick={onPlaceOrder} className='btn btn-success mt-2'>\r\n//                 Place Order\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Cart\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}